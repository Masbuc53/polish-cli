import * as fs from 'fs/promises';
import * as path from 'path';
import * as os from 'os';
import { Config } from '../types/index.js';

export class ConfigService {
  private configPath: string;

  constructor() {
    this.configPath = path.join(os.homedir(), '.polish', 'config.json');
  }

  async exists(): Promise<boolean> {
    try {
      await fs.access(this.configPath);
      return true;
    } catch {
      return false;
    }
  }

  async load(): Promise<Config> {
    try {
      const data = await fs.readFile(this.configPath, 'utf-8');
      return JSON.parse(data);
    } catch (error) {
      throw new Error('Configuration not found');
    }
  }

  async save(config: Config): Promise<void> {
    const dir = path.dirname(this.configPath);
    await fs.mkdir(dir, { recursive: true });
    await fs.writeFile(this.configPath, JSON.stringify(config, null, 2));
  }

  getDefaultConfig(): Config {
    return {
      vault: {
        path: path.join(os.homedir(), 'ObsidianVault'),
        structure: {
          documents: 'Documents',
          media: 'Media',
          code: 'Code',
          references: 'References',
        },
      },
      originals: {
        path: path.join(os.homedir(), 'OrganizedFiles'),
        organizationStyle: 'type-based',
        createYearFolders: true,
      },
      sources: [
        {
          path: path.join(os.homedir(), 'Desktop'),
          includeSubfolders: false,
        },
        {
          path: path.join(os.homedir(), 'Downloads'),
          includeSubfolders: false,
        },
      ],
      processing: {
        extractText: true,
        maxFileSize: '50MB',
        supportedFormats: ['pdf', 'docx', 'txt', 'md', 'png', 'jpg', 'py', 'js'],
      },
      tagging: {
        maxTags: 10,
        autoGenerateTypeTags: true,
        autoGenerateDateTags: true,
        customTagPatterns: {},
      },
      api: {
        mode: 'claude-code',
        apiKey: 'env:ANTHROPIC_API_KEY',
        model: 'claude-3-opus-20240229',
        maxTokens: 4096,
        temperature: 0.3,
      },
    };
  }
}